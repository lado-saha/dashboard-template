{
  "openapi": "3.0.1",
  "info": {
    "title": "Organization Management Service",
    "description": "Organization Management Service",
    "license": {
      "name": "Unlicense",
      "url": "https://unlicense.org/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://gateway.yowyob.com/organization-service"
    }
  ],
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    },
    {
      "Public-Key": []
    }
  ],
  "tags": [
    {
      "name": "Employee",
      "description": "Endpoints for managing employees"
    },
    {
      "name": "Proposed Activity",
      "description": "Endpoints for managing proposed activities"
    },
    {
      "name": "Organisation",
      "description": "Endpoints organization management"
    },
    {
      "name": "Practical Information",
      "description": "Endpoints for managing practical information"
    },
    {
      "name": "Contacts",
      "description": "Endpoints contacts management"
    },
    {
      "name": "Business Actor",
      "description": "Endpoints for managing business actors"
    },
    {
      "name": "Address",
      "description": "Endpoints addresses management"
    },
    {
      "name": "Images",
      "description": "Manages images for the organisation"
    },
    {
      "name": "Customer",
      "description": "Endpoints for managing customers"
    },
    {
      "name": "ThirdParty",
      "description": "Endpoints de gestions des agence"
    },
    {
      "name": "Supplier",
      "description": "Endpoints for managing suppliers and their resources/services"
    },
    {
      "name": "Sales Person",
      "description": "Endpoints for managing salespersons"
    },
    {
      "name": "Agency",
      "description": "Endpoints de gestions des agence"
    },
    {
      "name": "Prospect",
      "description": "Endpoints for managing prospects"
    },
    {
      "name": "Certification",
      "description": "Endpoints for managing certifications"
    },
    {
      "name": "Business Domain",
      "description": "Endpoints for managing business domains"
    }
  ],
  "paths": {
    "/{contactable_type}/{contactable_id}/contacts/{contact_id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact for a given contact identifier",
        "operationId": "getContactById",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "operationId": "updateContact",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact for the given identifier",
        "operationId": "deleteContactById",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/{addressable_type}/{addressable_id}/addresses/{address_id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get address for a given address identifier",
        "operationId": "getAddressById",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Update address",
        "operationId": "updateAddress",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "summary": "Delete address for the given identifier",
        "operationId": "deleteAddressById",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations{organization_id}/practical-infos/{information_id}": {
      "get": {
        "tags": [
          "Practical Information"
        ],
        "summary": "Get practical information by ID",
        "operationId": "getPracticalInformationById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "information_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PracticalInformationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Practical Information"
        ],
        "summary": "Update practical information",
        "operationId": "updatePracticalInformation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "information_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePracticalInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PracticalInformationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Practical Information"
        ],
        "summary": "Delete practical information",
        "operationId": "deletePracticalInformation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "information_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get an organization for the given identifier",
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update organization",
        "operationId": "updateOrganisation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organisation"
        ],
        "summary": "Delete an organization for the given identifier",
        "operationId": "deleteOrganisation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/third-parties/{id}": {
      "get": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "getThirdPartyById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "updateOrganizationThirdParty",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThirdPartyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "deleteThirdParty",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/organizations/{organization_id}/third-parties/{id}/status": {
      "put": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "updateThirdPartyStatus",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateThirdPartyStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/suppliers/{provider_id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get an provider by ID",
        "operationId": "getProviderById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update an organization provider",
        "operationId": "updateProvider",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete organization provider",
        "operationId": "deleteProvider",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/status": {
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update the status of an organization",
        "description": "Update the status of the specified organization",
        "operationId": "updateOrganisationStatus",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/sales-people/{sales_person_id}": {
      "get": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Get an organization sales person by ID",
        "operationId": "getSalesPersonById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Update an organization sales person",
        "operationId": "updateSalesPerson",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSalesPersonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Delete an agency sales person salesperson",
        "operationId": "deleteSalesPerson",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/prospects/{prospect_id}": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get organization prospect by ID",
        "operationId": "getProspectById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prospect"
        ],
        "summary": "Update organization prospect",
        "operationId": "updateProspect",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProspectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prospect"
        ],
        "summary": "Delete organization prospect",
        "operationId": "deleteProspect",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/proposed-activities/{activity_id}": {
      "get": {
        "tags": [
          "Proposed Activity"
        ],
        "summary": "Get proposed activity by ID",
        "operationId": "getProposedActivityById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProposedActivityDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Proposed Activity"
        ],
        "summary": "Update proposed activity",
        "operationId": "updateProposedActivity",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProposedActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProposedActivityDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Proposed Activity"
        ],
        "summary": "Delete proposed activity",
        "operationId": "deleteProposedActivity",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/employees/{employee_id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get an employee by ID",
        "operationId": "getEmployeeById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update an organization employee",
        "operationId": "updateEmployee",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an employee",
        "operationId": "deleteEmployee",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/domains/{business_domain_id}": {
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Add business domain to organization",
        "description": "Add business domain to organization",
        "operationId": "addBusinessDomain",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "business_domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Organisation"
        ],
        "summary": "Remove business domain from organization",
        "description": "Remove business domain from organization",
        "operationId": "removeBusinessDomain",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "business_domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/customers/{customer_id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get an customer by ID",
        "operationId": "getCustomerById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an organization customer",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete organization customer",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/certifications/{certification_id}": {
      "get": {
        "tags": [
          "Certification"
        ],
        "summary": "Get a certification by ID",
        "operationId": "getCertificationById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "certification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CertificationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Certification"
        ],
        "summary": "Update a certification",
        "operationId": "updateCertification",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "certification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCertificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CertificationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certification"
        ],
        "summary": "Delete a certification",
        "operationId": "deleteCertification",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "certification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get agency by given identifier",
        "operationId": "getOrganizationAgencyById",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agency"
        ],
        "summary": "Update an agency",
        "operationId": "updateOrganizationAgency",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agency"
        ],
        "summary": "Remove organization agency",
        "operationId": "deleteOrganizationAgency",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/suppliers/{provider_id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get an provider by ID",
        "operationId": "getProviderById_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update an organization provider",
        "operationId": "updateProvider_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete remove agency provider",
        "operationId": "deleteProvider_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/status": {
      "put": {
        "tags": [
          "Agency"
        ],
        "summary": "Update agency status",
        "operationId": "updateOrganizationAgencyStatus",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgencyStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/sales-people/{sales_person_id}": {
      "get": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Get an agency  sales person by ID",
        "operationId": "getSalesPersonById_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Update an organization sales person",
        "operationId": "updateSalesPerson_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSalesPersonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Delete an organization sales person salesperson",
        "operationId": "deleteSalesPerson_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sales_person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/prospects/{prospect_id}": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get agency prospect by ID",
        "operationId": "getProspectById_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prospect"
        ],
        "summary": "Update agency prospect",
        "operationId": "updateProspect_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProspectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prospect"
        ],
        "summary": "Delete agency prospect",
        "operationId": "deleteProspect_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "prospect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/employees/{employee_id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get an employee by ID",
        "operationId": "getEmployeeById_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update an organization employee",
        "operationId": "updateEmployee_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Delete an employee",
        "operationId": "deleteEmployee_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "employee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/customers/{customer_id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get an customer by ID",
        "operationId": "getCustomerById_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an organization customer",
        "operationId": "updateCustomer_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete remove agency customer",
        "operationId": "deleteCustomer_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/images/{idOrganisation}/add": {
      "put": {
        "tags": [
          "Images"
        ],
        "summary": "Get a list of Id for a Organisation",
        "operationId": "submitImage",
        "parameters": [
          {
            "name": "images",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          {
            "name": "idOrganisation",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business-domains/{business_domain_id}": {
      "get": {
        "tags": [
          "Business Domain"
        ],
        "summary": "Get a business domain by ID",
        "operationId": "getBusinessDomainById",
        "parameters": [
          {
            "name": "business_domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessDomainDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business Domain"
        ],
        "summary": "Update a business domain",
        "operationId": "updateBusinessDomain",
        "parameters": [
          {
            "name": "business_domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessDomainDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business Domain"
        ],
        "summary": "Delete a business domain",
        "operationId": "deleteBusinessDomain",
        "parameters": [
          {
            "name": "business_domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/business-actors/{business_actor_id}": {
      "get": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Get a business actor by ID",
        "operationId": "getBusinessActorById",
        "parameters": [
          {
            "name": "business_actor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessActorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Update a business actor",
        "operationId": "updateBusinessActor",
        "parameters": [
          {
            "name": "business_actor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessActorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessActorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Delete a business actor",
        "operationId": "deleteBusinessActor",
        "parameters": [
          {
            "name": "business_actor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/{contactable_type}/{contactable_id}/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get  contacts",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          }
        }
      }
    },
    "/{addressable_type}/{addressable_id}/addresses": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get  addresses",
        "operationId": "getAddresses",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Create address",
        "operationId": "createAddress",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddressRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get all organizations",
        "operationId": "getAllOrganisation",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationTableRow"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Create an organization",
        "operationId": "createOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations{organization_id}/practical-infos": {
      "get": {
        "tags": [
          "Practical Information"
        ],
        "summary": "Get all practical information",
        "operationId": "getPracticalInformation",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PracticalInformationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Practical Information"
        ],
        "summary": "Create practical information",
        "operationId": "createPracticalInformation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePracticalInformationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PracticalInformationDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/third-parties/{type}": {
      "post": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "createThirdParty",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "11",
                "12",
                "21",
                "22",
                "23",
                "24",
                "25",
                "31",
                "32",
                "33",
                "34",
                "41",
                "42",
                "43",
                "51",
                "52",
                "61",
                "62",
                "63",
                "71",
                "72"
              ]
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateThirdPartyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ThirdPartyDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/suppliers": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get all oganization providers",
        "operationId": "getProviders",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Create an organization provider",
        "operationId": "createProvider",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/sales-people": {
      "get": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Get all organization sales people",
        "operationId": "getSalesPersons",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Create an organization sales person",
        "operationId": "createSalesPerson",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSalesPersonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/prospects": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get organization prospects",
        "operationId": "getProspects",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prospect"
        ],
        "summary": "Create a prospect",
        "operationId": "createProspect",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProspectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/proposed-activities": {
      "get": {
        "tags": [
          "Proposed Activity"
        ],
        "summary": "Get all proposed activities",
        "operationId": "getProposedActivities",
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProposedActivityDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proposed Activity"
        ],
        "summary": "Create proposed activity",
        "operationId": "createProposedActivity",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProposedActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProposedActivityDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all oganization employees",
        "operationId": "getEmployees",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create an organization employee",
        "operationId": "createEmployee",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all oganization customers",
        "operationId": "getCustomers",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create an organization customer",
        "operationId": "createCustomer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/certifications": {
      "get": {
        "tags": [
          "Certification"
        ],
        "summary": "Get all certifications",
        "operationId": "geCertifications",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Certification"
        ],
        "summary": "Create a certification",
        "operationId": "createCertification",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCertificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CertificationDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies": {
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "Get all active agencies",
        "operationId": "getActiveOrganizationAgencies",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgencyDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Create an organization agency",
        "operationId": "createOrganizationAgency",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgencyDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/suppliers": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get all agency providers",
        "operationId": "getProviders_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProviderDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Create an agency provider",
        "operationId": "createProvider_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/suppliers/add": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Create an agency provider",
        "operationId": "affectProvider",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/sales-people": {
      "get": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Get all organization sales people",
        "operationId": "getSalesPersons_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPersonDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales Person"
        ],
        "summary": "Create an agency sales person",
        "operationId": "createSalesPerson_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSalesPersonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPersonDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/prospects": {
      "get": {
        "tags": [
          "Prospect"
        ],
        "summary": "Get agency prospects",
        "operationId": "getProspects_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProspectDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prospect"
        ],
        "summary": "Create a prospect",
        "operationId": "createProspect_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProspectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/employees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all agency employees",
        "operationId": "getEmployees_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create an agency employee",
        "operationId": "createEmployee_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/employees/add": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create an agency employee",
        "operationId": "affectEmployee",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all agency customers",
        "operationId": "getCustomers_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create an agency customer",
        "operationId": "createCustomer_1",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/agencies/{agency_id}/customers/add": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create an agency customer",
        "operationId": "affectCustomer",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "agency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectCustomerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        }
      }
    },
    "/business-domains": {
      "get": {
        "tags": [
          "Business Domain"
        ],
        "summary": "Get all business domains",
        "operationId": "getAllBusinessDomains",
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GetBusinessDomainRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessDomainDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business Domain"
        ],
        "summary": "Create a business domain",
        "operationId": "createBusinessDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessDomainRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessDomainDto"
                }
              }
            }
          }
        }
      }
    },
    "/business-actors": {
      "get": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Get all business actors",
        "operationId": "getAllBusinessActors",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessActorDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Create a business actor",
        "operationId": "createBusinessActor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessActorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessActorDto"
                }
              }
            }
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "operationId": "getAllApplications",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "operationId": "createApplication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationDto"
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/keys/create": {
      "post": {
        "tags": [
          "application-key-controller"
        ],
        "operationId": "createApiKey",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationKeyDto"
                }
              }
            }
          }
        }
      }
    },
    "/{contactable_type}/{contactable_id}/contacts/{contact_id}/favorite": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Mark given contact as favorite",
        "operationId": "markAsFavorite",
        "parameters": [
          {
            "name": "contactable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER"
              ]
            }
          },
          {
            "name": "contactable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          }
        }
      }
    },
    "/{addressable_type}/{addressable_id}/addresses/{address_id}/favorite": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Mark given address as favorite",
        "operationId": "markAsFavorite_1",
        "parameters": [
          {
            "name": "addressable_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "BUSINESS_ACTOR",
                "ORGANIZATION",
                "AGENCY",
                "BUSINESS_PARTNER",
                "SALES_PERSON",
                "PROVIDER",
                "CUSTOMER",
                "PROSPECT",
                "DRIVER",
                "DELIVERER",
                "DELIVERY"
              ]
            }
          },
          {
            "name": "addressable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/third-parties": {
      "get": {
        "tags": [
          "ThirdParty"
        ],
        "operationId": "getThirdPartiesByStatus",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GetThirdPartyRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThirdPartyDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/user": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get my organizations",
        "operationId": "getAllMyOrganisation",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationTableRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/domains/{domain_id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Get all organization for a given domain identifier",
        "operationId": "getAllOrganisation_1",
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationTableRow"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/images/{id}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get an image",
        "description": "Get an image by his id",
        "operationId": "getImageById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDto"
                }
              }
            }
          }
        }
      }
    },
    "/images/download/{imageName}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Download Image",
        "operationId": "downloadProfileImage",
        "parameters": [
          {
            "name": "imageName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HttpServletRequest"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/business-actors/types/{type}": {
      "get": {
        "tags": [
          "Business Actor"
        ],
        "summary": "Get all business actors for given type",
        "description": "ba_type=business actor type",
        "operationId": "getBusinessActorsByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PROVIDER",
                "CUSTOMER",
                "SALESPERSON",
                "CLIENT",
                "FREELANCE_DRIVER",
                "FARMER",
                "AGENCY",
                "VEHICLE_RENTAL",
                "GUEST"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessActorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/applications/{application_id}/keys": {
      "get": {
        "tags": [
          "application-key-controller"
        ],
        "operationId": "getApplicationKey",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationKeyDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNKNOWN"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "ok": {
            "type": "boolean"
          }
        }
      },
      "UpdateContactRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "secondary_phone_number": {
            "type": "string"
          },
          "fax_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "secondary_email": {
            "type": "string"
          }
        }
      },
      "ContactDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "contact_id": {
            "type": "string",
            "format": "uuid"
          },
          "contactable_type": {
            "type": "string",
            "enum": [
              "BUSINESS_ACTOR",
              "ORGANIZATION",
              "AGENCY",
              "BUSINESS_PARTNER",
              "SALES_PERSON",
              "PROVIDER",
              "CUSTOMER",
              "PROSPECT",
              "DRIVER",
              "DELIVERER"
            ]
          },
          "contactable_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "is_email_verified": {
            "type": "boolean"
          },
          "is_phone_number_verified": {
            "type": "boolean"
          },
          "is_favorite": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "secondary_phone_number": {
            "type": "string"
          },
          "fax_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "secondary_email": {
            "type": "string"
          },
          "verified_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateAddressRequest": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "country_id": {
            "type": "string",
            "format": "uuid"
          },
          "zip_code": {
            "type": "string"
          },
          "neighbor_hood": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "addressable_type": {
            "type": "string",
            "enum": [
              "BUSINESS_ACTOR",
              "ORGANIZATION",
              "AGENCY",
              "BUSINESS_PARTNER",
              "SALES_PERSON",
              "PROVIDER",
              "CUSTOMER",
              "PROSPECT",
              "DRIVER",
              "DELIVERER",
              "DELIVERY"
            ]
          },
          "addressable_id": {
            "type": "string",
            "format": "uuid"
          },
          "address_id": {
            "type": "string",
            "format": "uuid"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "country_id": {
            "type": "string",
            "format": "uuid"
          },
          "zip_code": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "neighbor_hood": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "UpdatePracticalInformationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "PracticalInformationDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "information_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "UpdateOrganizationRequest": {
        "required": [
          "business_domains",
          "description",
          "email",
          "legal_form",
          "long_name",
          "short_name"
        ],
        "type": "object",
        "properties": {
          "long_name": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "logo_url": {
            "type": "string"
          },
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "web_site_url": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "business_registration_number": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "ceo_name": {
            "type": "string"
          },
          "year_founded": {
            "type": "string",
            "format": "date-time"
          },
          "keywords": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number_of_employees": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrganizationDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "email": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "is_individual_business": {
            "type": "boolean"
          },
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "is_active": {
            "type": "boolean"
          },
          "website_url": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "business_registration_number": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "ceo_name": {
            "type": "string"
          },
          "year_founded": {
            "type": "string",
            "format": "date-time"
          },
          "keywords": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "TERMINATED",
              "PENDING_APPROVAL",
              "UNDER_REVIEW",
              "DISSOLVED"
            ]
          }
        }
      },
      "UpdateThirdPartyRequest": {
        "type": "object",
        "properties": {
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "unique_identification_number": {
            "type": "string"
          },
          "trade_registration_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "acronym": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounting_account_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_payment_methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_credit_limit": {
            "type": "number"
          },
          "max_discount_rate": {
            "type": "number"
          },
          "vat_subject": {
            "type": "boolean"
          },
          "operations_balance": {
            "type": "number"
          },
          "opening_balance": {
            "type": "number"
          },
          "pay_term_number": {
            "type": "integer",
            "format": "int32"
          },
          "pay_term_type": {
            "type": "string"
          },
          "third_party_family": {
            "type": "string"
          },
          "classification": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tax_number": {
            "type": "string"
          },
          "loyalty_points": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_used": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ThirdPartyDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "11",
              "12",
              "21",
              "22",
              "23",
              "24",
              "25",
              "31",
              "32",
              "33",
              "34",
              "41",
              "42",
              "43",
              "51",
              "52",
              "61",
              "62",
              "63",
              "71",
              "72"
            ]
          },
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "unique_identification_number": {
            "type": "string"
          },
          "trade_registration_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "acronym": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounting_account_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_payment_methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_credit_limit": {
            "type": "number"
          },
          "max_discount_rate": {
            "type": "number"
          },
          "vat_subject": {
            "type": "boolean"
          },
          "operations_balance": {
            "type": "number"
          },
          "opening_balance": {
            "type": "number"
          },
          "pay_term_number": {
            "type": "integer",
            "format": "int32"
          },
          "pay_term_type": {
            "type": "string"
          },
          "third_party_family": {
            "type": "string"
          },
          "classification": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tax_number": {
            "type": "string"
          },
          "loyalty_points": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_used": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateThirdPartyStatusRequest": {
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        }
      },
      "UpdateProviderRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "contact_info": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "product_service_type": {
            "type": "string"
          }
        }
      },
      "ProviderDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "partner_type": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "SUPPLIER",
              "SALE",
              "PROSPECT"
            ]
          },
          "partner_details": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "provider_id": {
            "type": "string",
            "format": "uuid"
          },
          "contact_info": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "product_service_type": {
            "type": "string"
          }
        }
      },
      "UpdateOrganizationStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "TERMINATED",
              "PENDING_APPROVAL",
              "UNDER_REVIEW",
              "DISSOLVED"
            ]
          }
        }
      },
      "UpdateSalesPersonRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "format": "float"
          },
          "current_balance": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "SalesPersonDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "partner_type": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "SUPPLIER",
              "SALE",
              "PROSPECT"
            ]
          },
          "partner_details": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "sales_person_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "format": "float"
          },
          "current_balance": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "UpdateProspectRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          },
          "interest_level": {
            "type": "string"
          }
        }
      },
      "ProspectDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "partner_type": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "SUPPLIER",
              "SALE",
              "PROSPECT"
            ]
          },
          "partner_details": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "prospect_id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          },
          "interest_level": {
            "type": "string"
          }
        }
      },
      "UpdateProposedActivityRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ProposedActivityDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "activity_id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UpdateEmployeeRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "employee_role": {
            "type": "string",
            "enum": [
              "CEO",
              "ENGINEER",
              "MARKETING",
              "FINANCE",
              "HR",
              "SALES",
              "CUSTOMERSERVICE",
              "OWNER",
              "SALESPERSON",
              "CUSTOMER",
              "PROVIDER",
              "MANAGER",
              "SUPERADMIN",
              "ADMIN",
              "SUPPORT",
              "OTHER"
            ]
          }
        }
      },
      "EmployeeResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "employee_id": {
            "type": "string",
            "format": "uuid"
          },
          "last_name": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "organisation_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "employee_role": {
            "type": "string",
            "enum": [
              "CEO",
              "ENGINEER",
              "MARKETING",
              "FINANCE",
              "HR",
              "SALES",
              "CUSTOMERSERVICE",
              "OWNER",
              "SALESPERSON",
              "CUSTOMER",
              "PROVIDER",
              "MANAGER",
              "SUPERADMIN",
              "ADMIN",
              "SUPPORT",
              "OTHER"
            ]
          },
          "department": {
            "type": "string"
          }
        }
      },
      "UpdateCustomerRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          }
        }
      },
      "CustomerDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "partner_type": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "SUPPLIER",
              "SALE",
              "PROSPECT"
            ]
          },
          "partner_details": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "customer_id": {
            "type": "string",
            "format": "uuid"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          }
        }
      },
      "UpdateCertificationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "obtainment_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CertificationDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "certification_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "obtainment_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateAgencyRequest": {
        "required": [
          "business_domains",
          "location",
          "long_name",
          "short_name"
        ],
        "type": "object",
        "properties": {
          "short_name": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "transferable": {
            "type": "boolean"
          },
          "images": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "greeting_message": {
            "type": "string"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "average_revenue": {
            "type": "number"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_number": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          }
        }
      },
      "AgencyDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "transferable": {
            "type": "boolean"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "is_active": {
            "type": "boolean"
          },
          "logo": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "is_individual_business": {
            "type": "boolean"
          },
          "is_headquarter": {
            "type": "boolean"
          },
          "images": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "greeting_message": {
            "type": "string"
          },
          "year_created": {
            "type": "string",
            "format": "date-time"
          },
          "manager_name": {
            "type": "string"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "average_revenue": {
            "type": "number"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_number": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "keywords": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_public": {
            "type": "boolean"
          },
          "is_business": {
            "type": "boolean"
          },
          "operation_time_plan": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "total_affiliated_customers": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateAgencyStatusRequest": {
        "required": [
          "active"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        }
      },
      "ImageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "fileType": {
            "type": "string"
          }
        }
      },
      "UpdateBusinessDomainRequest": {
        "required": [
          "name",
          "type",
          "type_label"
        ],
        "type": "object",
        "properties": {
          "parent_domain_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "galleries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "type_label": {
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "BusinessDomainDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "parent_domain_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "galleries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "type_label": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "UpdateBusinessActorRequest": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar_picture": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_individual": {
            "type": "boolean"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "nationality": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PROVIDER",
              "CUSTOMER",
              "SALESPERSON",
              "CLIENT",
              "FREELANCE_DRIVER",
              "FARMER",
              "AGENCY",
              "VEHICLE_RENTAL",
              "GUEST"
            ]
          }
        }
      },
      "BusinessActorDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "business_actor_id": {
            "type": "string",
            "format": "uuid"
          },
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar_picture": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_individual": {
            "type": "boolean"
          },
          "is_available": {
            "type": "boolean"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "type": "string",
            "enum": [
              "CEO",
              "ENGINEER",
              "MARKETING",
              "FINANCE",
              "HR",
              "SALES",
              "CUSTOMERSERVICE",
              "OWNER",
              "SALESPERSON",
              "CUSTOMER",
              "PROVIDER",
              "MANAGER",
              "SUPERADMIN",
              "ADMIN",
              "SUPPORT",
              "OTHER"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "nationality": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "qualifications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "payment_methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addresses": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "is_verified": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "biography": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PROVIDER",
              "CUSTOMER",
              "SALESPERSON",
              "CLIENT",
              "FREELANCE_DRIVER",
              "FARMER",
              "AGENCY",
              "VEHICLE_RENTAL",
              "GUEST"
            ]
          }
        }
      },
      "CreateContactRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "secondary_phone_number": {
            "type": "string"
          },
          "fax_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "secondary_email": {
            "type": "string"
          }
        }
      },
      "CreateAddressRequest": {
        "type": "object",
        "properties": {
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "country_id": {
            "type": "string",
            "format": "uuid"
          },
          "zip_code": {
            "type": "string"
          },
          "neighbor_hood": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreateOrganizationRequest": {
        "required": [
          "business_domains",
          "description",
          "email",
          "legal_form",
          "long_name",
          "short_name"
        ],
        "type": "object",
        "properties": {
          "long_name": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "logo_url": {
            "type": "string"
          },
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "web_site_url": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "business_registration_number": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "ceo_name": {
            "type": "string"
          },
          "year_founded": {
            "type": "string",
            "format": "date-time"
          },
          "keywords": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number_of_employees": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreatePracticalInformationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateThirdPartyRequest": {
        "type": "object",
        "properties": {
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "unique_identification_number": {
            "type": "string"
          },
          "trade_registration_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "acronym": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accounting_account_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_payment_methods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorized_credit_limit": {
            "type": "number"
          },
          "max_discount_rate": {
            "type": "number"
          },
          "vat_subject": {
            "type": "boolean"
          },
          "operations_balance": {
            "type": "number"
          },
          "opening_balance": {
            "type": "number"
          },
          "pay_term_number": {
            "type": "integer",
            "format": "int32"
          },
          "pay_term_type": {
            "type": "string"
          },
          "third_party_family": {
            "type": "string"
          },
          "classification": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tax_number": {
            "type": "string"
          },
          "loyalty_points": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_used": {
            "type": "integer",
            "format": "int32"
          },
          "loyalty_points_expired": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateProviderRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "contact_info": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "product_service_type": {
            "type": "string"
          }
        }
      },
      "CreateSalesPersonRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commission_rate": {
            "type": "number",
            "format": "float"
          },
          "credit": {
            "type": "number",
            "format": "float"
          },
          "current_balance": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "CreateProspectRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          },
          "interest_level": {
            "type": "string"
          }
        }
      },
      "CreateProposedActivityRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateEmployeeRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "employee_role": {
            "type": "string",
            "enum": [
              "CEO",
              "ENGINEER",
              "MARKETING",
              "FINANCE",
              "HR",
              "SALES",
              "CUSTOMERSERVICE",
              "OWNER",
              "SALESPERSON",
              "CUSTOMER",
              "PROVIDER",
              "MANAGER",
              "SUPERADMIN",
              "ADMIN",
              "SUPPORT",
              "OTHER"
            ]
          }
        }
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "logo": {
            "type": "string"
          },
          "transaction_id": {
            "type": "number",
            "format": "float"
          },
          "payment_method": {
            "type": "string"
          },
          "amount_paid": {
            "type": "string"
          }
        }
      },
      "CreateCertificationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "obtainment_date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateAgencyRequest": {
        "required": [
          "business_domains",
          "location",
          "long_name",
          "short_name"
        ],
        "type": "object",
        "properties": {
          "short_name": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "transferable": {
            "type": "boolean"
          },
          "images": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "greeting_message": {
            "type": "string"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "average_revenue": {
            "type": "number"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_number": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          }
        }
      },
      "AffectProviderRequest": {
        "type": "object",
        "properties": {
          "provider_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AffectEmployeeRequest": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AffectCustomerRequest": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateBusinessDomainRequest": {
        "required": [
          "name",
          "type",
          "type_label"
        ],
        "type": "object",
        "properties": {
          "parent_domain_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "galleries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "type_label": {
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CreateBusinessActorRequest": {
        "required": [
          "first_name"
        ],
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "avatar_picture": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_individual": {
            "type": "boolean"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "nationality": {
            "type": "string"
          },
          "profession": {
            "type": "string"
          },
          "biography": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PROVIDER",
              "CUSTOMER",
              "SALESPERSON",
              "CLIENT",
              "FREELANCE_DRIVER",
              "FARMER",
              "AGENCY",
              "VEHICLE_RENTAL",
              "GUEST"
            ]
          }
        }
      },
      "CreateApplicationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "success_url": {
            "pattern": "^(https?://).*",
            "type": "string"
          },
          "cancel_url": {
            "pattern": "^(https?://).*",
            "type": "string"
          },
          "failed_url": {
            "pattern": "^(https?://).*",
            "type": "string"
          },
          "callback_url": {
            "pattern": "^(https?://).*",
            "type": "string"
          }
        }
      },
      "ApplicationDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "business_actor_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "success_url": {
            "type": "string"
          },
          "cancel_url": {
            "type": "string"
          },
          "failed_url": {
            "type": "string"
          },
          "callback_url": {
            "type": "string"
          }
        }
      },
      "ApplicationKeyDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "application_id": {
            "type": "string",
            "format": "uuid"
          },
          "public_key": {
            "type": "string"
          },
          "secret_key": {
            "type": "string"
          }
        }
      },
      "OrganizationTableRow": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "business_actor_id": {
            "type": "string",
            "format": "uuid"
          },
          "business_domains": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "email": {
            "type": "string"
          },
          "short_name": {
            "type": "string"
          },
          "long_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "is_individual_business": {
            "type": "boolean"
          },
          "legal_form": {
            "type": "string",
            "enum": [
              "11",
              "21",
              "22",
              "23",
              "24",
              "31",
              "32",
              "33",
              "34",
              "35",
              "41",
              "42",
              "51",
              "52",
              "53",
              "54",
              "61",
              "62",
              "63",
              "64",
              "71",
              "72",
              "73",
              "81",
              "82",
              "83",
              "84",
              "85"
            ]
          },
          "is_active": {
            "type": "boolean"
          },
          "website_url": {
            "type": "string"
          },
          "social_network": {
            "type": "string"
          },
          "business_registration_number": {
            "type": "string"
          },
          "tax_number": {
            "type": "string"
          },
          "capital_share": {
            "type": "number"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time"
          },
          "ceo_name": {
            "type": "string"
          },
          "year_founded": {
            "type": "string",
            "format": "date-time"
          },
          "keywords": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "SUSPENDED",
              "TERMINATED",
              "PENDING_APPROVAL",
              "UNDER_REVIEW",
              "DISSOLVED"
            ]
          }
        }
      },
      "GetThirdPartyRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "The third status"
          },
          "type": {
            "type": "string",
            "description": "The third type",
            "enum": [
              "11",
              "12",
              "21",
              "22",
              "23",
              "24",
              "25",
              "31",
              "32",
              "33",
              "34",
              "41",
              "42",
              "43",
              "51",
              "52",
              "61",
              "62",
              "63",
              "71",
              "72"
            ]
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "Le numéro de la page",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "description": "La taille d&apos;dne page",
            "format": "int32"
          }
        }
      },
      "EmployeeDto": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "format": "uuid"
          },
          "updated_by": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid"
          },
          "agency_id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "short_description": {
            "type": "string"
          },
          "long_description": {
            "type": "string"
          },
          "location_id": {
            "type": "string",
            "format": "uuid"
          },
          "partner_type": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "SUPPLIER",
              "SALE",
              "PROSPECT"
            ]
          },
          "partner_details": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "employee_id": {
            "type": "string",
            "format": "uuid"
          },
          "is_manager": {
            "type": "boolean"
          },
          "employee_role": {
            "type": "string",
            "enum": [
              "CEO",
              "ENGINEER",
              "MARKETING",
              "FINANCE",
              "HR",
              "SALES",
              "CUSTOMERSERVICE",
              "OWNER",
              "SALESPERSON",
              "CUSTOMER",
              "PROVIDER",
              "MANAGER",
              "SUPERADMIN",
              "ADMIN",
              "SUPPORT",
              "OTHER"
            ]
          },
          "department": {
            "type": "string"
          }
        }
      },
      "AsyncContext": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "integer",
            "format": "int64"
          },
          "request": {
            "$ref": "#/components/schemas/ServletRequest"
          },
          "response": {
            "$ref": "#/components/schemas/ServletResponse"
          }
        }
      },
      "Cookie": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "maxAge": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "secure": {
            "type": "boolean"
          },
          "httpOnly": {
            "type": "boolean"
          },
          "path": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "deprecated": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "deprecated": true
          }
        }
      },
      "FilterRegistration": {
        "type": "object",
        "properties": {
          "servletNameMappings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urlPatternMappings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "initParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "HttpServletMapping": {
        "type": "object",
        "properties": {
          "matchValue": {
            "type": "string"
          },
          "mappingMatch": {
            "type": "string",
            "enum": [
              "CONTEXT_ROOT",
              "DEFAULT",
              "EXACT",
              "EXTENSION",
              "PATH"
            ]
          },
          "servletName": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          }
        }
      },
      "HttpServletRequest": {
        "type": "object",
        "properties": {
          "authType": {
            "type": "string"
          },
          "pathInfo": {
            "type": "string"
          },
          "pathTranslated": {
            "type": "string"
          },
          "requestedSessionId": {
            "type": "string"
          },
          "requestURL": {
            "type": "object",
            "properties": {
              "length": {
                "type": "integer",
                "format": "int32",
                "writeOnly": true
              },
              "empty": {
                "type": "boolean"
              }
            }
          },
          "servletPath": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/HttpSession"
          },
          "requestedSessionIdValid": {
            "type": "boolean"
          },
          "remoteUser": {
            "type": "string"
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Part"
            }
          },
          "trailerFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "trailerFieldsReady": {
            "type": "boolean"
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cookie"
            }
          },
          "httpServletMapping": {
            "$ref": "#/components/schemas/HttpServletMapping"
          },
          "requestedSessionIdFromCookie": {
            "type": "boolean"
          },
          "requestedSessionIdFromURL": {
            "type": "boolean"
          },
          "method": {
            "type": "string"
          },
          "requestURI": {
            "type": "string"
          },
          "queryString": {
            "type": "string"
          },
          "headerNames": {
            "type": "object"
          },
          "contextPath": {
            "type": "string"
          },
          "userPrincipal": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "characterEncoding": {
            "type": "string"
          },
          "asyncSupported": {
            "type": "boolean"
          },
          "serverName": {
            "type": "string"
          },
          "serverPort": {
            "type": "integer",
            "format": "int32"
          },
          "remoteHost": {
            "type": "string"
          },
          "locales": {
            "type": "object"
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localName": {
            "type": "string"
          },
          "localAddr": {
            "type": "string"
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "asyncStarted": {
            "type": "boolean"
          },
          "asyncContext": {
            "$ref": "#/components/schemas/AsyncContext"
          },
          "requestId": {
            "type": "string"
          },
          "protocolRequestId": {
            "type": "string"
          },
          "servletConnection": {
            "$ref": "#/components/schemas/ServletConnection"
          },
          "scheme": {
            "type": "string"
          },
          "inputStream": {
            "$ref": "#/components/schemas/ServletInputStream"
          },
          "protocol": {
            "type": "string"
          },
          "locale": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          },
          "contentLength": {
            "type": "integer",
            "format": "int32"
          },
          "contentLengthLong": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string"
          },
          "attributeNames": {
            "type": "object"
          },
          "dispatcherType": {
            "type": "string",
            "enum": [
              "FORWARD",
              "INCLUDE",
              "REQUEST",
              "ASYNC",
              "ERROR"
            ]
          },
          "parameterMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "servletContext": {
            "$ref": "#/components/schemas/ServletContext"
          },
          "remoteAddr": {
            "type": "string"
          },
          "reader": {
            "type": "object"
          },
          "secure": {
            "type": "boolean"
          },
          "parameterNames": {
            "type": "object"
          }
        }
      },
      "HttpSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "attributeNames": {
            "type": "object"
          },
          "servletContext": {
            "$ref": "#/components/schemas/ServletContext"
          },
          "new": {
            "type": "boolean"
          },
          "maxInactiveInterval": {
            "type": "integer",
            "format": "int32"
          },
          "lastAccessedTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JspConfigDescriptor": {
        "type": "object",
        "properties": {
          "taglibs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaglibDescriptor"
            }
          },
          "jspPropertyGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JspPropertyGroupDescriptor"
            }
          }
        }
      },
      "JspPropertyGroupDescriptor": {
        "type": "object",
        "properties": {
          "deferredSyntaxAllowedAsLiteral": {
            "type": "string"
          },
          "elIgnored": {
            "type": "string"
          },
          "errorOnELNotFound": {
            "type": "string"
          },
          "pageEncoding": {
            "type": "string"
          },
          "scriptingInvalid": {
            "type": "string"
          },
          "isXml": {
            "type": "string"
          },
          "includePreludes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeCodas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trimDirectiveWhitespaces": {
            "type": "string"
          },
          "errorOnUndeclaredNamespace": {
            "type": "string"
          },
          "defaultContentType": {
            "type": "string"
          },
          "buffer": {
            "type": "string"
          },
          "urlPatterns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Part": {
        "type": "object",
        "properties": {
          "submittedFileName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "inputStream": {
            "type": "object"
          },
          "contentType": {
            "type": "string"
          },
          "headerNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReadListener": {
        "type": "object"
      },
      "ServletConnection": {
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string"
          },
          "protocolConnectionId": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "secure": {
            "type": "boolean"
          }
        }
      },
      "ServletContext": {
        "type": "object",
        "properties": {
          "sessionCookieConfig": {
            "$ref": "#/components/schemas/SessionCookieConfig"
          },
          "virtualServerName": {
            "type": "string"
          },
          "classLoader": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "registeredAsParallelCapable": {
                "type": "boolean"
              },
              "parent": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "registeredAsParallelCapable": {
                    "type": "boolean"
                  },
                  "unnamedModule": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "descriptor": {
                        "type": "object",
                        "properties": {
                          "open": {
                            "type": "boolean"
                          },
                          "automatic": {
                            "type": "boolean"
                          }
                        }
                      },
                      "named": {
                        "type": "boolean"
                      },
                      "annotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "declaredAnnotations": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "packages": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "nativeAccessEnabled": {
                        "type": "boolean"
                      },
                      "layer": {
                        "type": "object"
                      }
                    }
                  },
                  "definedPackages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "declaredAnnotations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "sealed": {
                          "type": "boolean"
                        },
                        "specificationTitle": {
                          "type": "string"
                        },
                        "specificationVersion": {
                          "type": "string"
                        },
                        "specificationVendor": {
                          "type": "string"
                        },
                        "implementationTitle": {
                          "type": "string"
                        },
                        "implementationVersion": {
                          "type": "string"
                        },
                        "implementationVendor": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "defaultAssertionStatus": {
                    "type": "boolean",
                    "writeOnly": true
                  }
                }
              },
              "unnamedModule": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "descriptor": {
                    "type": "object",
                    "properties": {
                      "open": {
                        "type": "boolean"
                      },
                      "automatic": {
                        "type": "boolean"
                      }
                    }
                  },
                  "named": {
                    "type": "boolean"
                  },
                  "annotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "declaredAnnotations": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "packages": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nativeAccessEnabled": {
                    "type": "boolean"
                  },
                  "layer": {
                    "type": "object"
                  }
                }
              },
              "definedPackages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "annotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "declaredAnnotations": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "sealed": {
                      "type": "boolean"
                    },
                    "specificationTitle": {
                      "type": "string"
                    },
                    "specificationVersion": {
                      "type": "string"
                    },
                    "specificationVendor": {
                      "type": "string"
                    },
                    "implementationTitle": {
                      "type": "string"
                    },
                    "implementationVersion": {
                      "type": "string"
                    },
                    "implementationVendor": {
                      "type": "string"
                    }
                  }
                }
              },
              "defaultAssertionStatus": {
                "type": "boolean",
                "writeOnly": true
              }
            }
          },
          "majorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "minorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "attributeNames": {
            "type": "object"
          },
          "contextPath": {
            "type": "string"
          },
          "initParameterNames": {
            "type": "object"
          },
          "sessionTrackingModes": {
            "uniqueItems": true,
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string",
              "enum": [
                "COOKIE",
                "URL",
                "SSL"
              ]
            }
          },
          "sessionTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "effectiveMajorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "effectiveMinorVersion": {
            "type": "integer",
            "format": "int32"
          },
          "jspConfigDescriptor": {
            "$ref": "#/components/schemas/JspConfigDescriptor"
          },
          "requestCharacterEncoding": {
            "type": "string"
          },
          "responseCharacterEncoding": {
            "type": "string"
          },
          "serverInfo": {
            "type": "string"
          },
          "defaultSessionTrackingModes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "COOKIE",
                "URL",
                "SSL"
              ]
            }
          },
          "servletContextName": {
            "type": "string"
          },
          "servletRegistrations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ServletRegistration"
            }
          },
          "filterRegistrations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FilterRegistration"
            }
          },
          "effectiveSessionTrackingModes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "COOKIE",
                "URL",
                "SSL"
              ]
            }
          }
        }
      },
      "ServletInputStream": {
        "type": "object",
        "properties": {
          "finished": {
            "type": "boolean"
          },
          "ready": {
            "type": "boolean"
          },
          "readListener": {
            "$ref": "#/components/schemas/ReadListener"
          }
        }
      },
      "ServletOutputStream": {
        "type": "object",
        "properties": {
          "writeListener": {
            "$ref": "#/components/schemas/WriteListener"
          },
          "ready": {
            "type": "boolean"
          }
        }
      },
      "ServletRegistration": {
        "type": "object",
        "properties": {
          "mappings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runAsRole": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "initParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ServletRequest": {
        "type": "object",
        "properties": {
          "characterEncoding": {
            "type": "string"
          },
          "asyncSupported": {
            "type": "boolean"
          },
          "serverName": {
            "type": "string"
          },
          "serverPort": {
            "type": "integer",
            "format": "int32"
          },
          "remoteHost": {
            "type": "string"
          },
          "locales": {
            "type": "object"
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localName": {
            "type": "string"
          },
          "localAddr": {
            "type": "string"
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "asyncStarted": {
            "type": "boolean"
          },
          "asyncContext": {
            "$ref": "#/components/schemas/AsyncContext"
          },
          "requestId": {
            "type": "string"
          },
          "protocolRequestId": {
            "type": "string"
          },
          "servletConnection": {
            "$ref": "#/components/schemas/ServletConnection"
          },
          "scheme": {
            "type": "string"
          },
          "inputStream": {
            "$ref": "#/components/schemas/ServletInputStream"
          },
          "protocol": {
            "type": "string"
          },
          "locale": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          },
          "contentLength": {
            "type": "integer",
            "format": "int32"
          },
          "contentLengthLong": {
            "type": "integer",
            "format": "int64"
          },
          "contentType": {
            "type": "string"
          },
          "attributeNames": {
            "type": "object"
          },
          "dispatcherType": {
            "type": "string",
            "enum": [
              "FORWARD",
              "INCLUDE",
              "REQUEST",
              "ASYNC",
              "ERROR"
            ]
          },
          "parameterMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "servletContext": {
            "$ref": "#/components/schemas/ServletContext"
          },
          "remoteAddr": {
            "type": "string"
          },
          "reader": {
            "type": "object"
          },
          "secure": {
            "type": "boolean"
          },
          "parameterNames": {
            "type": "object"
          }
        }
      },
      "ServletResponse": {
        "type": "object",
        "properties": {
          "writer": {
            "type": "object"
          },
          "contentLengthLong": {
            "type": "integer",
            "format": "int64",
            "writeOnly": true
          },
          "bufferSize": {
            "type": "integer",
            "format": "int32"
          },
          "committed": {
            "type": "boolean"
          },
          "characterEncoding": {
            "type": "string"
          },
          "locale": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "variant": {
                "type": "string"
              },
              "script": {
                "type": "string"
              },
              "unicodeLocaleAttributes": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "unicodeLocaleKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "displayLanguage": {
                "type": "string"
              },
              "displayScript": {
                "type": "string"
              },
              "displayCountry": {
                "type": "string"
              },
              "displayVariant": {
                "type": "string"
              },
              "extensionKeys": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "iso3Language": {
                "type": "string"
              },
              "iso3Country": {
                "type": "string"
              }
            }
          },
          "contentType": {
            "type": "string"
          },
          "outputStream": {
            "$ref": "#/components/schemas/ServletOutputStream"
          },
          "contentLength": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "SessionCookieConfig": {
        "type": "object",
        "properties": {
          "maxAge": {
            "type": "integer",
            "format": "int32"
          },
          "domain": {
            "type": "string"
          },
          "httpOnly": {
            "type": "boolean"
          },
          "path": {
            "type": "string"
          },
          "secure": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "comment": {
            "type": "string",
            "deprecated": true
          }
        }
      },
      "TaglibDescriptor": {
        "type": "object",
        "properties": {
          "taglibURI": {
            "type": "string"
          },
          "taglibLocation": {
            "type": "string"
          }
        }
      },
      "WriteListener": {
        "type": "object"
      },
      "GetBusinessDomainRequest": {
        "type": "object",
        "properties": {
          "organization_id": {
            "type": "string",
            "description": "The ID of the organization",
            "format": "uuid"
          },
          "parent_domain_id": {
            "type": "string",
            "description": "The ID of the business domain parent",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The business domain name"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "The page number",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "description": "The page size",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "Public-Key": {
        "type": "apiKey",
        "name": "Public-Key",
        "in": "header",
        "scheme": "Public-Key"
      }
    }
  }
}